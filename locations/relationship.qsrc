#relationship
!{ Interface to the Relationship system.  This system determines the relationship or reputation that the NPC has for the PC

Methods are:
1) modify => adds value to this relationship.  Can be integer(positive or negative) or string with 'like', 'love', 'adore', 'dislike','hate','loathe'
    params: NPCID, value
2) set => sets relationship to a specific value (used to initialize?)
    params: NPCID, value
3) check => like willpower checks, this is used to see if the NPC passes a given threshhold.
    params: value, NPCID1,NPCID2,NPCID3....
    result: number of NPCs that passed the check

$ARGS[1] determines the Method being used:

'modify' =>
	$ARGS[1] => NPCID - This is NPC identifier thisis acting one, for example 'A29' is the PC''s mother.
	 ARGS[2] => integer for how much to change the relationship  can be positive or negative
	  or
	$ARGS[2] => if third value is a string, the writer doesn't need to know the numberic values, but can use generic amounts
		'like'    => moves relationship a small amount
		'love'    => moves relationship a moderate amount
		'adore'   => moves relationship a large amount
		'dislike' => moves relationship a small amount
		'hate'    => moves relationship a moderate amount
		'loathe'  => moves relationship a large amount
	examples:
		gs 'relationship', 'modify', 'A29', 2
		gs 'relationship', 'modify', 'A29', 'hate'

'set' =>
	$ARGS[1] => NPCID - This is NPC identifier thisis acting one, for example 'A29' is the PC''s mother.
	 ARGS[2] => integer to set this NPC's relationship to a specific value.
	  or
	$ARGS[2] => if third value is a string, the writer doesn't need to know the numberic values, but can use generic amounts
		'unknown'     => NPC don''t know PC
		'aquaintance' => NPC knows PC, but not much else
		'friend'      => NPC is friends and will probably react favorably
		'bestie'      => NPC is a best friend
		'loved'       => NPC will die to protect PC
	examples:
		gs 'relationship', 'set', 'A29', 90
		gs 'relationship', 'set', 'A29', 'loved'

'check' =>
	 ARGS[1] => Relationship level to check for.  Should be integer 1 - 100
	$ARGS[2-9] => List of NPCIDs to check, , for example 'A29' is the PC''s mother.
	examples:
		!Check if one of Mother, Aunt Ludmilla, or Grandma have at least 50 relationship:
			if func('relationship', 'check', 50, 'A29', 'A30', 'A31') > 0:
		!Check if all of Mother, Aunt Ludmilla, or Grandma have at least 50 relationship:
			if func('relationship', 'check', 50, 'A29', 'A30', 'A31') > 2:
		!Also if you don't like a function, if sets variable npc_rel_check like WillPower
			gs 'relationship', 'check', 50, 'A29', 'A30', 'A31'
			if npc_rel_check > 0:
}

if $ARGS[0] = 'modify':
	!Handle if value is numeric
	if $ARGS[2] = '':
		npcRelSetVal = ARGS[2]
	!Handle cases where value is a string to be interpreted
	elseif $ARGS[2] = 'like':
		npcRelSetVal = rand(1,2)
	elseif $ARGS[2] = 'love':
		npcRelSetVal = rand(2,4)
	elseif $ARGS[2] = 'adore':
		npcRelSetVal = rand(4,12)
	elseif $ARGS[2] = 'dislike':
		npcRelSetVal = 0-rand(1,2)
	elseif $ARGS[2] = 'hate':
		npcRelSetVal = 0-rand(2,4)
	elseif $ARGS[2] = 'loathe':
		npcRelSetVal = 0-rand(4,12)
	!Handle default value
	else
		npcRelSetVal = 0
	end
	npc_rel[$ARGS[1]] += npcRelSetVal
	killvar 'npcRelSetVal'
end


if $ARGS[0] = 'set':
	!Handle if value is numeric
	if $ARGS[2] = '':
		npcRelSetVal = ARGS[2]
	!Handle cases where value is a string to be interpreted
	elseif $ARGS[2] = 'unknown':
		npcRelSetVal = 0
	elseif $ARGS[2] = 'aquaintance':
		npcRelSetVal = 20
	elseif $ARGS[2] = 'friend':
		npcRelSetVal = 50
	elseif $ARGS[2] = 'bestie':
		npcRelSetVal = 70
	elseif $ARGS[2] = 'loved':
		npcRelSetVal = 90
	!Handle default value
	else
		npcRelSetVal = 0
	end
	npc_rel[$ARGS[1]] = npcRelSetVal
	killvar 'npcRelSetVal'
end


if $ARGS[0] = 'check':
	!Value we are checking against
	npcRelSetVal = ARGS[1]
	npc_rel_check = 0
	!Loop through remaining $ARGS entries and count up number of successful compares
	i=2
	:npcRelCheck000
	if $ARGS[i] ! '':
		if npc_rel[$ARGS[i]] >= npcRelSetVal:
			npc_rel_check += 1
		end
		i+=1
		jump 'npcRelCheck000'
	end
	result = npc_rel_check
	killvar 'npcRelSetVal'
end


--- relationship ---------------------------------