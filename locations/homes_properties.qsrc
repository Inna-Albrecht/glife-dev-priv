# homes_properties

!! The initial rental values for different properties
if ARRSIZE('rent') < 2:
	prop_rent['city_apartment'] = 15000
	$prop_rent['city_apartment'] = '15,000'
	prop_rent['old_town_apartment'] = 10000
	$prop_rent['old_town_apartment'] = '10,000'
end

!! The initial rental values for different properties
if ARRSIZE('price')  < 4:
	prop_price['city_apartment'] = 800000
	$prop_price['city_apartment'] = '800,000'
	prop_price['village_cottage'] = 150000
	$prop_price['village_cottage'] = '150,000'
	prop_price['matryona_mansion'] = 1500000
	$prop_price['matryona_mansion'] = '1,500,000'
	prop_price['city_house'] = 100000
	$prop_price['city_house'] = '100,000'
end

if ARRSIZE('home_name') < 1:
	!! The list goes like this:
	!!    1. $home_name['property code']
	!!    2. $home_name['property id']  - for backward compatibility only, nothing else and the number is a string index
	!!    2. $home_name['enctrance location'] 
	!!    3.- N.  $home_name['other locations']

	!! CITY APARTMENT
	$home_name['city_apartment'] = 'city_apartment'
	$home_name['1'] = 'city_apartment'
	$home_name['korr'] = 'city_apartment'
	$home_name['bedr'] = 'city_apartment'
	$home_name['sitr'] = 'city_apartment'
	$home_name['kuhr'] = 'city_apartment'
	$home_name['vanr'] = 'city_apartment'

	!! PARENTS HOME
	$home_name['parents_home'] = 'parents_home'
	$home_name['2'] = 'parents_home'
	$home_name['code'] = 'parents_home'
	$home_name['korrPar'] = 'parents_home'
	$home_name['bedrPar'] = 'parents_home'
	$home_name['sitrPar'] = 'parents_home'
	$home_name['kuhrPar'] = 'parents_home'
	$home_name['vanrPar'] = 'parents_home'

	!! VILLAGE COTTAGE
	$home_name['village_cottage'] = 'village_cottage'
	$home_name['3'] = 'village_cottage'
	$home_name['dachamy'] = 'village_cottage'
	$home_name['dachain'] = 'village_cottage'
	$home_name['dachaogr'] = 'village_cottage'
	$home_name['dachaogr0'] = 'village_cottage'

	!! OLD TOWN (PUSHKIN) APARTMENTS
	$home_name['old_town_apartment'] = 'old_town_apartment'
	$home_name['4'] = 'old_town_apartment'
	$home_name['korr2x'] = 'old_town_apartment'
	$home_name['bedr2x'] = 'old_town_apartment'
	$home_name['sitr2x'] = 'old_town_apartment'
	$home_name['kuhr2x'] = 'old_town_apartment'
	$home_name['vanr2x'] = 'old_town_apartment'

	!! MATRYONA MANSION
	$home_name['matryona_mansion'] = 'matryona_mansion'
	$home_name['5'] = 'matryona_mansion'
	$home_name['city_mansion_entrance'] = 'matryona_mansion'
	$home_name['city_mansion_residence_1'] = 'matryona_mansion'
	$home_name['city_mansion_residence_2'] = 'matryona_mansion'
	$home_name['city_mansion_residence_3'] = 'matryona_mansion'

	!! PAVLOVSK HOTEL
	$home_name['pavlovsk_hotel'] = 'pavlovsk_hotel'
	$home_name['6'] = 'pavlovsk_hotel'
	$home_name['pav_hotel'] = 'pavlovsk_hotel'
	pav_hotel['HotelRoom'] = 'pavlovsk_hotel'

	!! LIVE IN MAID BEDROOM
	$home_name['maid_bedroom'] = 'maid_bedroom'
	$home_name['7'] = 'maid_bedroom'
	$home_name['nichBedroomServant'] = 'maid_bedroom'

	!! NIKO''S APARTMENT
	$home_name['niko_apartment'] = 'niko_apartment'
	$home_name['8'] = 'niko_apartment'
	!! This home actually doesn''t exist yet, but it was defined,
	!! has an ID and all so, I am keeping it here

	!! SHULGA APARTMENT
	$home_name['shulga_apartment'] = 'shulga_apartment'
	$home_name['9'] = 'shulga_apartment'
	$home_name['shulgahall'] = 'shulga_apartment'
	$home_name['shulgabath'] = 'shulga_apartment'
	$home_name['shulgabed'] = 'shulga_apartment'
	$home_name['shulgakuh'] = 'shulga_apartment'
	
	!! LYCEUM DORM
	$home_name['lyceum_dorm'] = 'lyceum_dorm'
	$home_name['10'] = 'lyceum_dorm'
	$home_name['dom_gor'] = 'lyceum_dorm'

	!! UNIVERSITY DORM
	$home_name['university_dorm'] = 'university_dorm'
	$home_name['11'] = 'university_dorm'
	$home_name['uni_grounds'] = 'university_dorm'
	$home_name['uni_dorm'] = 'university_dorm'
	
	!! HUNTERS LODGE
	$home_name['hunters_lodge'] = 'hunters_lodge'
	$home_name['12'] = 'hunters_lodge'
	$home_name['swamphouse'] = 'hunters_lodge'
	$home_name['swamp_yard'] = 'hunters_lodge'


	!! SHARED APARTMENT - PAVLOVSK
	$home_name['shared_apartment'] = 'shared_apartment'
	$home_name['13'] = 'shared_apartment'
	$home_name['pav_shared_apt'] = 'shared_apartment'

	!! GRANDPARENTS HOUSE
	$home_name['grandparents_house'] = 'grandparents_house'
	$home_name['14'] = 'grandparents_house'
	$home_name['gaddvor'] = 'grandparents_house'
	$home_name['gadgarden'] = 'grandparents_house'
	$home_name['gadbana'] = 'grandparents_house'
	$home_name['gadgarden'] = 'grandparents_house'
	$home_name['gadhouse'] = 'grandparents_house'


	!! CITY HOUSE
	$home_name['city_house'] = 'city_house'
	$home_name['15'] = 'city_house'
	$home_name['city_house_res_misc'] = 'city_house'
	$home_name['city_house_res_bath'] = 'city_house'
	$home_name['city_house_re_bedr'] = 'city_house'
	$home_name['city_house-res_kitch'] = 'city_house'


	!! MEYNODLD HOUSEHOLD
	$home_name['meynold_household'] = 'meynold_household'
	$home_name['16'] = 'meynold_household'
	$hoome_name['mey_home'] = 'meynold_household'
end

!!{ All the existing properties should be added here. 
	id:			The old numerical id - for the nostalgia
	code:		The code of the property. Example: 'city_apartment', 'village_cottage'
	name:		General name to display
	display: 	The string to use in the middle of a sentence
	agency_display: The string the agency location uses 
	town:		The town/city/village the property can be found
	location:	The region within the town
	entrance:	The location where the charactes enter
	type:		The type of the property - it is used by some checks right now, dating app and such. 
				In the future this could be expanded to things like business properties, offices or other whatever we 
				want to simplify some checks.
	price:		The sales value of the property. Both as a number and as a string. !! NOTE: Maybe we don''t need it, 
				the numeric value can be displayed too and formatting can be done otherwise
	rent:		The monthly rent of the property. Both as a number and as a string. !! NOTE: Maybe we don''t need it, 
				the numeric value can be displayed too and formatting can be done otherwise
	rental:		Whether the property can be rented by Sveta or not. 
				1: Can be rented
				0: Can''t be rented // Examples are: Parents home, Shulga apartment, Hotel room in Pavlovsk, University dorm.
				Possible values are:
				1: rented via the agency, monthly rent, utility bills are paid, can be furnished, maybe renovated,
				   definitely needs an internet subscription
				4: not really a rented apartment, it is a "can live here" property. No utility is paid, 
				   Sveta can''t change anything
				   Examples are: Parents home, Shulga apartment, Hotel room in Pavlovsk, University dorm.

	free_internet: if the property comes with free internet (uses subscription['free']) then the value is `1`
				   Right now there are two potential homes with this: Meynold Household, University Dorm	

	internet_enabled: If the value is 1, then Sveta can buy, cancel, transfer an internet subscription here


	Property Types
	!! IMPORTANT: 
	!! NOTE: The types are not 100% clear and decided yet, need some more thinking. Also new ones can be added.

	permanent_residence:	This is a home that can be used for everything. Certain things don''t allow the more "transient"
							homes, like the dating app in Uni.
	temporary_residence:	This is a home that some events/actions won''t consider.

	New ones in the future could be for porperties that Sveta can own, rent, used, is not a home but can be changed/customised, etc. 
	For example a music studio/practice room, or a gallery, or a newspaper kiosk

	To make life easier, if is 0 or ''  for a property, then I didn''t include it. 
	Undefined strings will always evaluate to '' and undefined integers have a value of 0.
}

!! Always call this function with gs and use killvar'property' after finished with the data.
!!
!! ARGS[1] - the proprty code - a string identifier of the property. 
if $ARGS[0] = 'get_property_attr':
	if $ARGS[1] = 'city_apartment':
		property['id'] = 1
		$property['code'] = 'city_apartment'
		$property['name'] = 'City residential apartment'
		$property['display'] = 'apartment in St. Petersburg''s residential area'
		$property['agency_display'] = 'An apartment in St. Petersburg''s residential area'
		$property['town'] = 'city'
		$property['location'] = 'city_residential'
		$property['entrance'] = 'korr'
		$property['type'] = 'permanent_residence'
		$property['price'] = $prop_price['city_apartment']
		$property['rent'] = $prop_rent['city_apartment']		
		property['price'] = prop_price['city_apartment']
		property['rent'] = prop_rent['city_apartment']
		property['rental'] = 1
		property['internet_enabled'] = 1
	elseif $ARGS[1] = 'parents_home':
		property['id'] = 2
		$property['code'] = 'parents_home'
		$property['name'] = 'Parent''s home in Pavlovsk'
		$property['display'] = 'parent''s home in Pavlovsk'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_complex'
		$property['entrance'] = 'korrPar'
		$property['type'] = 'permanent_residence'
	elseif $ARGS[1] = 'village_cottage':
		property['id'] = 3
		$property['code'] = $ARGS[1]
		$property['name'] = 'My cottage in the cooperative village'
		$property['display'] = 'cottage in the cooperative village'
		$property['agency_display'] = 'A cottage located in the cooperative village'
		$property['town'] = 'city'
		$property['location'] = 'dachamy'
		$property['entrance'] = 'dachamy'
		$property['type'] = 'permanent_residence'
		$property['price'] = $prop_price['village_cottage']
		property['price'] = prop_price['village_cottage']
		!! Currently no cable or internet can be installed at this property, maybe later.
		property['internet_enabled'] = 0
	elseif $ARGS[1] = 'old_town_apartment':
		property['id'] = 4
		$property['code'] = $ARGS[1]
		$property['name'] = 'Old town apartment'
		$property['display'] = 'old town apartment'
		$property['angecy-display'] = 'An apartment in the old town of Puskin.'
		$property['town'] = 'oldtown'
		$property['location'] = 'liames'
		$property['entrance'] = 'korr2x'
		$property['type'] = 'permanent_residence'
		$property['rent'] = $prop_rent['old_town_apartment']		
		property['price'] = prop_rent['old_town_apartment']
		property['rental'] = 1
		property['internet_enabled'] = 1
	elseif $ARGS[1] = 'matryona_mansion':
		property['id'] = 5
		$property['code'] = $ARGS[1]
		$property['name'] = 'Matryona mansion'
		$property['display'] = 'Matryona mansion'
		$property['agency_display'] = 'A plot of land in the St. Petersburg''s suburbs'
		$property['town'] = 'city'
		$property['location'] = 'city_mansion_entrance'
		$property['entrance'] = 'city_mansion_residence_1'
		$property['type'] = 'permanent_residence'
		$property['price'] = $prop_rent['matryona_mansion']
		property['price'] = prop_rent['matryona_mansion']
		property['internet_enabled'] = 1
		property['contstruction_needed'] = 1
	elseif $ARGS[1] = 'pavlovsk_hotel':
		property['id'] = 6
		$property['code'] = $ARGS[1]
		$property['name'] = 'My hotel room in Pavlovsk'
		$property['display'] = 'hotel room in Pavlovsk'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_market'
		$property['entrance'] = 'pav_hotel'
		$property['type'] = 'temporary_residence'
	elseif $ARGS[1] = 'maid_bedroom':
		property['id'] = 7
		$property['code'] = $ARGS[1]
		$property['name'] = 'Nicholas'' Apartment'
		$property['display'] = 'maid bedroom in Nicholas'' apartment'
		$property['town'] = 'city'
		$property['location'] = 'city_center'
		$property['entrance'] = 'nichBedroomServant'
		$property['type'] = 'permanent_residence'
	elseif $ARGS[1] = 'niko_apartment':
		property['id'] = 8
		$property['code'] = $ARGS[1]
		$property['name'] = 'Niko''s apartment'
		$property['display'] = 'Niko''s apartment'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_residential'
		$property['entrance'] = 'pav_residential'
		$property['type'] = 'temporary_residence'
	elseif $ARGS[1] = 'shulga_apartment':
		property['id'] = 9
		$property['code'] = $ARGS[1]	
		$property['name'] = 'Uncle Sergey''s apartment'
		$property['display'] = 'Uncle Sergey''s apartment'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_complex'
		$property['entrance'] = 'shulgahall'
		$property['type'] = 'temporary_residence'
	elseif $ARGS[1] = 'lyceum_dorm':
		property['id'] = 10
		$property['code'] = $ARGS[1]	
		$property['name'] = 'Lyceum school'
		$property['display'] = 'room in the Lyceum dorm'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_commercial'
		$property['entrance'] = 'etoexhib'
		$property['type'] = 'permanent_residence'
	elseif $ARGS[1] = 'university_dorm':
		property['id'] = 11
		$property['code'] = $ARGS[1]
		$property['name'] = 'University halls'
		$property['display'] = 'room in the university dorm'
		$property['town'] = 'city'
		$property['location'] = 'city_island'
		$property['entrance'] = 'uni_dorm'
		$property['free-internet'] = 1
		$property['type'] = 'permanent_residence'
	elseif $ARGS[1] = 'hunters_lodge':
		property['id'] = 12
		$property['code'] = $ARGS[1]
		$property['name'] = 'Hunter''s lodge in Gadukino'
		$property['display'] = 'hunter''s lodge in Gadukino'
		$property['town'] = 'gadukino'
		$property['location'] = 'swamp_yard'
		$property['entrance'] = 'swamphouse'
		$property['type'] = 'temporary_residence'
	elseif $ARGS[1] = 'shared_apartment':
		property['id'] = 13
		$property['code'] = $ARGS[1]	
		$property['name'] = 'Shared apartment in Pavlovsk'
		$property['display'] = 'shared apartment in Pavlovsk'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_complex'
		$property['entrance'] = 'pav_shared_apt'
		$property['type'] = 'temporary_residence'
	elseif $ARGS[1] = 'grandparents_house':
		property['id'] = 14
		$property['code'] = $ARGS[1]
		$property['name'] = 'Grandparent''s house in Gadukino'
		$property['display'] = 'grandparent''s house in Gadukino'
		$property['town'] = 'gadukino'
		$property['location'] = 'gaddvor'
		$property['entrance'] = 'gaddvor'
		$property['type'] = 'temporary_residence'
	elseif $ARGS[1] = 'city_house':
		property['id'] = 15
		$property['code'] = $ARGS[1]
		$property['name'] = 'City residential house'
		$property['display'] = 'house in the St. Petersburg''s residential area'
		$property['agency_display'] = 'A house in the St. Petersburg''s residential area'
		$property['town'] = 'city'
		$property['location'] = 'city_residential'
		$property['entrance'] = 'city_house_res_misc'
		$property['type'] = 'permanent_residence'
		$property['price'] = $prop_price['city_house']
		property['price'] = prop_price['city_house']
		property['internet_enabled'] = 1
	elseif $ARGS[1] = 'meynold_household':
		property['id'] = 16
		$property['code'] = $ARGS[1]
		$property['name'] = 'Meynold Household'
		$property['display'] = 'the Meynold Household'
		$property['town'] = 'pavlovsk'
		$property['location'] = 'pav_residential'
		$property['entrance'] = 'mey_home'
		$property['type'] = 'temporary_residence'
		property['free_internet'] = 1
	else
		!! Nonexisting property. CAn be useful if someone wants to check if something is a property or not. For example the
		!! internet transfer code does this right now.
		gs 'homes_properties', 'mod_property_query_hook'
	end
end

!! This does nothing, the only reason to have this is that a mod can use a redirect to their own 
!! location, $args[0[] where they have the property info and can return it.
if $ARGS[0] = 'property_query_hook':
	!! use this for the redirect
	mod_result = 1
end

!! Set the current home for Sveta based on either the property code or the id - for backward compatibility or some mods
!! $ARGS[1] - a string to identify the property.
!!			  Possible values:
!!			  A property code - 'city_apartment', 'village_cottage', etc.
!!			  A location name - $loc passed
!! 			  An empty string - in this case ARGS[2] is mandatory
!!			  A number as str - really should remove this 	
!!
if $ARGS[0] = 'set_home':
	if $ARGS[1] = '' and $ARGS[2] = 0:
		!! WARNING: No way to identify home, missing arguments
	elseif $ARGS = '':
		gs 'homes_properties', 'get_property_attr', $loc]
	else
		gs 'homes_properties', 'get_property_attr', $home_name[$ARGS[1]]
	end

	COPYARR 'home','property'
	$home['current'] = $property['code']
	killvar 'property'
end

!! $ARGS[1]: the location that will have the ownership
!!			Accepted values
!!			- property code   -> 'city_apartment', 'parents_home'
!!			- a location      ->  'bedrPar, 'koo2x' - A value that can shop up in $loc
!!			- empty strying   ->  '' - will work as if a locaiton was passed, but will use the actual value of $loc
!!			- A number as str -> '1', '2' - this should be the id of the property 
!!			  					NOTE: only added in case someone really want to use the old ids
!! ARGS[2]: ownership type
!!			0: no acces  -> 'no access'
!!			1: not owned but can live her - a rented property or living at some else''s place
!!			2: owned     -> 'owned'
!!			3: owned and rented out -> 'tenants'
!! ARGS[3]: construction status - optional
!!			0: land only 
!!			1: foundation, frames built, utilities are connected
!!			2: fully built
!! ARGS[4]:renovation status - optional
!!			0: not renovated
!!			1: fully renovated
if $ARGS[0] = 'set_ownership':
	if $ARGS[1] = '':
		$prop_code = $home_name[$loc]
	else
		$prop_code = $home_name[$ARGS[1]]
	end
	orig_status_code = owned_property[$prop_code]
	new_status_code = $ARGS[2]
	if ARGS[2] = 1 and $property['rental'] = 0: new_status_code = 4
	
	if orig_status_code ! new_status_code:
		$owned_property[$prop_code] = $prop_code
		owned_property[$prop_code] = new_status_code

		gs 'homes_properties', 'get_property_attr', $prop_code
			
		if $property['contstruction_needed'] = 1:
			owned_property[$prop_code+'-construction-status'] = ARGS[3]
		else
			owned_property[$prop_code+'-construction-status'] = 2
		end
		owned_property[$prop_code+'-renovated'] = ARGS[4]

		!! Setting status dependent variables
		if owned_property[$prop_code] = 0:
			!! If this was the current home then killing it
			if $home['current'] = $prop_code: killvar '$home'
			!! Resetting rent days just to be sure
			owned_property[$prop_code+'-days-left'] = -1
			
			!! Updating home counts
			!! NOTE: Valid transitions: 1 -> 0, 2 -> 0, 4 -> 0
			if $property['type'] = 'permanent_residence' or $property['type'] = 'temporary_residence':
				if orig_status_code = 1: owned_property['rental_home_count'] -= 1
				if orig_status_code = 2: owned_property['owned_home_count'] -= 1
				if owned_property[$prop_code+'-construction-status'] = 2: owned_property['furnishable_home_count'] -= 1
				owned_property['accessible_home_count'] -= 1
			end
		elseif owned_property[$prop_code] = 1:
			!! Setting rent days
			owned_property[$prop_code+'-days-left'] += func('homes_properties', 'rent_due_date')
			
			!! Updating home counts
			!! NOTE: Only valid transition is 0 -> 1
			if $property['type'] = 'permanent_residence' or $property['type'] = 'temporary_residence':
				owned_property['rental_home_count']+-= 1
				owned_property['accessible_home_count'] += 1
				if owned_property[$prop_code+'-construction-status'] = 2: owned_property['furnishable_home_count'] +=1 
			end
		elseif owned_property[$prop_code] = 2:
			!! Resetting rent days left just in case
			owned_property[$prop_code+'-days-left'] = -1
			
			!! Updating home counts
			!! NOTE: Valid transitions: 0 -> 2, 1 -> 2, 3-> 2
			if $property['type'] = 'permanent_residence' or $property['type'] = 'temporary_residence':
			if orig_status_code = 0: 
				owned_property['accessible_home_count'] += 1
				if owned_property[$prop_code+'-construction-status'] = 2: owned_property['furnishable_home_count'] += 1
			end
			if orig_status_code = 1: owned_property['rental_home_count'] -= 1
			if orig_status_code = 3: 
				owned_property['tenant_home_count'] -= 1 
				if owned_property[$prop_code+'-construction-status'] = 2: owned_property['furnishable_home_count'] += 1
			end
			owned_property['owned_home_count'] += 1
		elseif owned_property[$prop_code] = 3:
			!! Resetting rent days left just in case
			owned_property[$prop_code+'-days-left'] = -1
			
			!! Updating home counts
			!! NOTE: Valid transitions: 2 -> 3
			if $property['type'] = 'permanent_residence' or $property['type'] = 'temporary_residence':
				owned_property['tenant_home_count'] += 1
				owned_property['owned_home_count'] -= 1
				owned_property['accessible_home_count'] -= 1
			end
		elseif owned_property[$prop_code] = 4:
			!! Resetting rent days left just in case
			owned_property[$prop_code+'-days-left'] = -1
			
			!! Updating home counts
			!! NOTE: Valid transitions: 0 -> 4
			if $property['type'] = 'permanent_residence' or $property['type'] = 'temporary_residence':
				owned_property['accessible_home_count'] += 1
			end
		end
		killvar 'property'
	end

	killvar 'orig_status_code'
	killvar 'new_status_code'
end

!! Use it as a func() returns the list of property codes for the properties are homes and are owned
!!
!! ARGS[1] - optional, if 1 then the full list is returns, if 0 then homes are occupied by tenants are left out.
if $ARGS[0] = 'get_owned_homes':
	i = 0
	j = 0
	count = ARRSIZE('owned_property')
	if count > 0: 
		:countloop
			gs 'homes_properties', 'get_property_attr', $owned_property[i]
			if $property['type'] = 'permanent_residence' and (owned_property[i] = 2 or (owned_property[i] = 3 and $ARGS[1] = 1)): 
				$result[j] = $property['code']
				j += 1
			end
			i += 1
			killvar 'property'
		if i < count: jump 'countloop'
	end
	killvar 'count'
	killvar 'i'
	killvar 'j'
end

!! Use it as a func() returns the count of properties that are homes and are owned
!!
!! ARGS[1] - optional, if 1 then the full list is returns, if 0 then homes are occupied by tenants are left out.
if $ARGS[0] = 'get_owned_homes_count':
	i = 0
	count = ARRSIZE('owned_property')
	if count > 0: 
		:countloop
			gs 'homes_properties', 'get_property_attr', $owned_property[i]
			if $property['type'] = 'permanent_residence' and (owned_property[i] = 2 or (owned_property[i] = 3 and $ARGS[1] = 1)): result += 1
			i += 1
			killvar 'property'
		if i < count: jump 'countloop'
	end
	killvar 'count'
	killvar 'i'
end

!! $ARGS[1]: the location that will have the ownership
!!			Accepted values
!!			- property code   -> 'city_apartment', 'parents_home'
!!			- a location      ->  'bedrPar, 'koo2x' - A value that can shop up in $loc
!!			- empty strying   ->  '' - will work as if a locaiton was passed, but will use the actual value of $loc
if $ARGS[0] = 'property_status':
	if $ARGS]1] = '':
		result = owned_property[$home_name[$loc]]
	else
		result = owned_property[$home_name[$ARGS[1]]]
	end
end

!! Creates two arrays, one with display name of the home the other with it''s status (owned, rented, tenants, etc.)
if $ARGS[0] = 'owned_home_name_status':
	i = 0
	j = 0
	count = ARRSIZE('owned_property')
	if count > 0: 
		:countloop
			gs 'homes_properties', 'get_property_attr', $owned_property[i]
			if $property['type'] = 'permanent_residence' and (owned_property[i] = 2 or owned_property[i] = 3): 
				$home_name_status= $property['display']
				home_name_status = owned_property[i]
				j += 1
			end
			i += 1
			killvar 'property'
		if i < count: jump 'countloop'
	end
	killvar 'count'
	killvar 'i'
	killvar 'j'
end

!! Use it as a func() returns the list of property codes for rented properties that are homes
if $ARGS[0] = 'get_rented_homes':
	i = 0
	j = 0
	count = ARRSIZE('owned_property')
	if count > 0: 
		:countloop
			gs 'homes_properties', 'get_property_attr', $owned_property[i]
			if $property['rental'] = 1 and owned_property[i] = 1: 
				$result[j] = $property['code']
				j += 1
			end
			i += 1
			killvar 'property'
		if i < count: jump 'countloop'
	end
	killvar 'count'
	killvar 'i'
	killvar 'j'
end

!! Use it as `gs` to create rent payment info
!! Creates $rent_name, rent_due, rent_days
if $ARGS[0] = 'rent_payment_info'
	i = 0
	j = 0
	count = ARRSIZE('owned_property')
	if count > 0: 
		:countloop
			gs 'homes_properties', 'get_property_attr', $owned_property[i]
			if $property['rental'] = 1 and owned_property[i] = 1: 
				$rent_name[j] = $property['display']
				$rent_code[j] = $property['code']
				rent_due[j] = property['rent']
				rent_days[j] = owned_property[$property['code']+'-days-left']
				j += 1
			end
			i += 1
			killvar 'property'
		if i < count: jump 'countloop'
	end
	killvar 'count'
	killvar 'i'
	killvar 'j'
end

!! Use it as a func() returns the total count of properties that are homes and accessible
if $ARGS[0] = 'get_accessible_count':
	result = owned_property['accessible_home_count']
end

!! Use it as a func() returns the total count of rented or woned properties that can be lived in a stuff can be bought for
!! TV, Computer, etc. that checks for this to allow purchase
if $ARGS[0] = 'get_count_of_furnishable_homes':
	result = owned_property['furnishable_home_count']
end


if $ARGS[0] = 'properties_for_sale':
	i = 0
	j = 0
	count = ARRSIZE('$home_name')
	if count > 0:
		:countloop
			if control_array[$home_name[i]] = 0:				
				control_array[$home_name[i]] = 1
				if owned_property[$home_name[i]] < 2:
					gs 'homes_properties', 'get_property_attr', $home_name[i]
					$properties_for_sale_name[j] = $property['agency_display']
					$properties_for_sale_code[j] = $property['code']
					$properties_for_sale_price[j] = $property['price']
					properties_for_sale_price[j] = property['price']
					killvar 'property'
					j += 1
				end
			end
			i += 1
		if i < count: jump 'countloop'
end

!! Given a location or property code,this will tell whether Sveta can live here
!! Could owned, rented or just allowed to stay (parents home, Meynold household, etc.)
!! Call it as `func('homes_properties', 'can_live_here')` 
!! It returns 0 if the answer is NO and 1 or -1 if the answer is yes
!!
!! $ARGS[1] - A string to use for the check. 
!!			  Accepted values:
!!			  - A property code: 'city_apartment', 'village_cottage', etc.
!!			  - A location: any value that can show up in $loc, e.g. 'bedrPar', 'mey_home', etc.
!!			  - empty string: If the argument is not passed - or an empty string - it will use $loc for the check
!!
if $ARGS[0] = 'can_live_here':
	if $ARGS[1] = '':
		result = owned_property[$home_name[$loc]] > 0
	else
		result = owned_property[$home_name[$ARGS[1]]] > 0
	end
end

!! Given a location, it will tell whether the location is the current home
!! Call it as `func('homes_properties', 'is_current_home')` 
!! It returns 0 if the location is not the current home otherwise 1 or -1 
!!
!! $ARGS[1] - A string to use for the check. 
!!			  Accepted values:
!!			  - A property code: 'city_apartment', 'village_cottage', etc.
!!			  - A location: any value that can show up in $loc, e.g. 'bedrPar', 'mey_home', etc.
!!			  - empty string: If the argument is not passed - or an empty string - it will use $loc for the check
!!
if $ARGS[0] = 'is_current_home':
	if $ARGS[1] = '': 
		result = $home['current'] = $home_name[$loc]
	elseif $home_name[$ARGS[1]] ! '':
		$result = $home_name[$ARGS[1]]
	else
		result = 0
	end
end

!! Given a location it returns the home name ($property['code']).
!! It can then be checked against current home, or used as the property code where 
!! originally the $home_name variable was used.
!! Call this as `func('homes_properties', 'get_home_name', $ARGS[1])` 
!!
!! $ARGS[1] - the location to be checked
!!			  Accepted values:
!!			  - a property code - 'city_apartment', etc.
!!			  - a location - a value that could show up in $loc, like 'bedr' or 'mey_home'
!!			  - empty string - in this case the actual $loc value will be used
if $ARGS[0] = 'get_home_name':
	if $ARGS[1] = '': 
		$result = $home['current'] = $home_name[$loc]
	elseif $home_name[$ARGS[1]] ! '':
		$result = $home_name[$ARGS[1]]
	else
		$result = ''
	end
end

!!{ 
This is for the mods that want to introduce some new home
**OR** they rename an existing home location.
Call this when the mod is initialised and then never again

Example: A mod changes some things in the bedroom at the parents home and for this
	redirects to `mod_whatever_bedrPar`. 
	In this case it would fail as the location code passed would not match
	`bedrPar` and would get back an empty string a the name of the home 
	To avoid this, the mod should call this function with to location to the mapping.

IMPORTANT: $ARGS[1] is mandatory, and either $ARGS[2] or $ARGS[3] must have a value! 

$ARGS[1]	the new location name as it would appear in the $loc variable. This must start with `mod_` otherwise 
$ARGS[2] 	the location that is being replaced - leave it '' if it is a completely new location
$ARGS[3] 	the name of the home if it is a completely new location - otherwise pass '' or don't pass it			}
if $ARGS[0] = 'add_new_home_location':
	if $home_name$ARGS[1] ! '': 
		!! WARNING: Do Nothing, the location already exists
	elseif $ARGS[2] = '' and $ARGS[3] = '':
		!! WARNING: Either $ARGS[2] or $ARGS[3] must have a value, otherwise no mapping will be created
		$home_name[$ARGS[1]] = ''
	elseif $ARGS[2] = '':
		$home_name[$ARGS[1]] = $home_name[$ARGS[2]]
	else
		$home_name[$ARGS[1]] = $ARGS[3]
	end
end

!! $ARGS[1] = the code name of the property, e.g. 'city_apartment' 
!! ARGS[2] - the number of days to add.
!!           if the value is 0 then the code will add the number of days that is there in the month
if $ARGS[0] = 'add_rent_days':
	if ARGS[2] = 0:
		owned_property[$ARGS[1]+'-days-left'] += func( 'homes_properties', 'rent_due_date')
	else
		owned_property[$ARGS[1]+'-days-left'] += ARGS[2]
	end
end

!! $ARGS[1] = the code name of the property, e.g. 'city_apartment' 
!! ARGS[2] - the number of days to set to.
if $ARGS[0] = 'set_rent_days':
	owned_property[$ARGS[1]+'-days-left'] = ARGS[2]
end

!! Call it as a func()
!! $ARGS[1] = the code name of the property, e.g. 'city_apartment' 
if $ARGS[0] = 'get_rent_days':
	result = owned_property[$ARGS[1]+'-days-left']
end

!! Call it as a func()
!! $ARGS[1] = the code name of the property, e.g. 'city_apartment' 
if $ARGS[0] = 'property_construction_status':
	result = owned_property[$ARGS[1]+'-construction-status']
end

!! $ARGS[1] = the code name of the property, e.g. 'city_apartment' 
if $ARGS[0] = 'progress_construction_status':
	if owned_property[$ARGS[1]+'-construction-status'] < 2: owned_property[$ARGS[1]+'-construction-status'] += 1
end

!! Call it as a func()
!! $ARGS[1] = the code name of the property, e.g. 'city_apartment' 
if $ARGS[0] = 'property_renovated':
	result = owned_property[$ARGS[1]+'-renovated']
end


!! Returns a simple string representation of the status
!! $ARGS[1]: the code name of the property, e.g. 'city_apartment' 
if $ARGS[0] = 'property_status_to_text':
	if ARGS[1] = 0: 
		result = 'no access'
	elseif ARGS[1] = 1: 
		result = 'rented'
	elseif ARGS[1] = 2: 
		result = 'owned'
	elseif ARGS[1] = 3: 
		result = 'tenants'		
	elseif ARGS[1] = 4:
		result = 'has access'
	else
		result = 'invalid status'
	end
end

!! Returns a string that can be displayed in a longer text.
!! For example 'You have tenants living in your city apartment.'
!! ARGS[1]: The ownership type
if $ARGS[0] = 'property_status_to_display_text':
	if ARGS[1] = 0: 
		result = 'You have no access to '
	elseif ARGS[1] = 1: 
		result = 'You are renting '
	elseif ARGS[1] = 2: 
		result = 'You own '
	elseif ARGS[1] = 3: 
		result = 'You have tenants living in '		
	else
		result = 'invalid status'
	end
end

!! Returns the monthly rent the property has - both as a number and as a string (result and $result)
!! Call as a func()
!! ARGS[1] - the code (not display) name of the property, e.g. city_apartment
if $ARGS[0] = 'get_rent':
	result = prop_rent[$ARGS[1]]
end

!! Returns the price of the property - both as a number and as a string (result and $result)
!! Call as a func() 
!! ARGS[1] - the code (not display) name of the property, e.g. city_apartment
if $ARGS[0] = 'get_price':
	result = prop_price[$ARGS[0]]
end

!! Returns the rent due date for the given month. Call as a func()
if $ARGS[0] = 'rent_due':
	if month = 1 or month = 3 or month = 5 or month = 7 or month = 8 or month = 10 or month = 12:
		result = 31
	elseif month = 2:
		if ((year mod 4 = 0) and (year mod 100 ! 0)) or (year mod 400 = 0):
			result = 29
		else
			result = 28
		end
	else
		result = 30
	end
end

!!{ 
Returns 0 if the property doesn''t give free internet access, and 1 or -1 if it does

$ARGS[1] 	The location to be checked
			Accepted values:
			- a property code - 'city_apartment', etc.
			- a location - a value that could show up in $loc, like 'bedr' or 'mey_home'
			- empty string - in this case the actual $loc value will be used 	}
if $ARGS[0] = 'free_internet_property':

end

!! Runs even night and sees if any tenants are moving out
if $ARGS[0] = 'tenant_move_out_check':
	count = ARRSIZE('owned_property')
	i = 0
	j = 0
	if count > 0:
		:tenantloop
			gs 'homes_properties', 'get_property_attr', $owned_property[i]
			if  $property['code'] ! '' and owned_property[$property['code']] = 3:
				if owned_property[$property['code']+'-tenant-day'] = day and owned_property[$property['code']+'-tenant-month'] = month:
					gs 'homes_properties', 'set_ownership', $property['code'], 2
					owned_property[$property['code']+'-tenant-day'] = -1
					owned_property[$property['code']+'-tenant-month'] = -1	
					$result[j] = '<b><font color="red">Your tenants have moved out from your <<$property[''name'']>> and your apartment is now vacant.</font></b>'
					j += 1
				end
			wnd					
			i += 1
			killvar 'property'
		if i < count: jump 'tenantloop'
	end
end

!! $ARGS[1] - the property code of the home that is rented to tenants
!! ARGS[2] - the tenancy end day
!! ARGS[3] - the tenancy end month
if $ARGS[0] = 'tenants_move_in':
	gs 'homes_properties', 'set_ownership', $ARGS[1], 3
	owned_property[$ARGS[1]+'-tenant-day'] = ARGS[2]
	owned_property[$ARGS[1]+'-tenant-month'] = ARGS[3]
end

--- homes_properties ---------------------------------